{
    "collab_server" : "",
    "contents" : "require(tidyverse)\nrequire(haven)\nrequire(dplyr)\nrequire(Lahman)\nrequire(magrittr)\n\nBatting %>% select(X2B:HR)\n\nc<-Batting %>% transmute(ExtraBaseHits = X2B + X3B + HR)\n\n#mutate -- add newly created column to data frame \n#transmute -- create new variable \n\nBatting %>% summarise(AvgX2B = mean(X2B, na.rm=TRUE)) \n#NA is missing \n\nBatting %>% group_by (teamID)\n\nBatting <- tbl_df(Batting)\nBatting\n\nBatting %>% group_by(teamID) #Once group by something, the tag sticks\n#with the data set until you ungroup it. \n\nsummarise(AvgX2B = mean(X2B, na.rm = TRUE))\n\n\n# create two simple data frames\n# underscore functions are from the tidyverse package \na <- data_frame(color = c(\"green\", \"yellow\", \"red\"), num = 1:3)\nb <- data_frame(color = c(\"green\", \"yellow\", \"pink\"), size = c(\"S\", \"M\", \"L\"))\na\nb\ninner_join(a, b)\n\ninner_join(a, b)\nfull_join(a, b)\nleft_join(a, b)\nright_join(a, b)\nleft_join(b, a)\nsemi_join(a, b) #joining between a and b, and filtering a where there is a match\nanti_join(a, b) #joining between a and b, and filthering where there is NOT a match \n\n\n\n\n\n\nb <- b %>% rename(col = color)\na\nb\ninner_join(a, b, by = c(\"color\" = \"col\"))\n\n\n\n\ntitanicData <- read_csv(\"https://raw.githubusercontent.com/jbpost2/DataScienceR/master/datasets/titanic.csv\")\ntitanicData\n\n\ntable(titanicData$embarked)\n\ntable(titanicData$survived)\n\ntable(titanicData$sex)\n\nhelp(table)\n\ntable(titanicData$survived, titanicData$sex)\ntab <- table(titanicData$survived, titanicData$embarked, titanicData$sex)\ntab\ntab[1, ,]\ntabl[]\n\nrequire(ggplot2)\n#filled bar plot\ng <- ggplot(data = titanicData %>% drop_na(embarked),\n            aes(x = as.factor(embarked)))\ng + geom_bar(aes(fill = as.factor(survived)))\n\ng <- ggplot(data = titanicData %>% drop_na(embarked),\n            aes(x = as.factor(embarked)))\ng + geom_bar(aes(fill = as.factor(survived))) +\n  labs(x = \"City Embarked\", \n       title = \"Bar Plot of Embarked City for Titanic Passengers\") + \n  scale_x_discrete(labels = c(\"Cherbourg\", \"Queenstown\", \"Southampton\")) + \n  scale_fill_discrete(name = \"Surived\", labels = c(\"No\",\"Yes\"))\n\n\n####\n\nCO2 <- tbl_df(CO2)\nCO2\n\nmean(CO2$uptake, trim = 0.05)\nmedian(CO2$uptake)\n\nsummary(CO2$uptake)\n\nquantile(CO2$uptake, probs = c(0.1,0.2))\n\nstats <- c(summary(CO2$uptake), var(CO2$uptake),\n           sd(CO2$uptake), quantile(CO2$uptake, probs = c(0.1, 0.2)))\n\nstats\nstr(stats)\n\nattributes(stats)\n\nnames(stats)[7:10] <-c(\"Var\", \"SD\", \"10thP\", \"20thP\")\n\nCO2 %>% group_by(Treatment) %>% summarise(avg=mean(uptake))\nCO2 %>% group_by(Treatment) %>% summarise(median=median(uptake))\n\n\nCO2 %>% group_by(Treatment, Type) %>% summarise(avg=mean(uptake))\n\ng <- ggplot(CO2, aes(x= uptake)) + geom_dotplot()\ng\n\n\ng <- ggplot(CO2, aes(x= uptake)) + geom_dotplot(aes(color=Treatment))\n\n\ng<-ggplot(CO2, aes(x=uptake)) + geom_histogram(color=\"blue\", fill=\"red\", linetype = \"dashed\")\ng\n\ng <- ggplot(CO2, aes(x = uptake))+\n  geom_histogram(aes(y = ..density.., fill = Treatment))+\n  geom_density(adjust = 0.25, alpha = 0.5, aes(fill = Treatment)) \n\n\ng <- ggplot(CO2, aes(x=uptake, color=Treatment)) + stat_ecdf(geom=\"step\")\n\ng\n\n\nscoresFull <- read_csv(\"https://raw.githubusercontent.com/jbpost2/DataScienceR/master/datasets/scoresFull.csv\")\nscoresFull\n\ng <- ggplot(scoresFull, aes(x = homeRushYds, y = HFinal)) + geom_point() + geom_smooth() + \n  geom_smooth(method = lm, col = \"Red\") #linear regression line \ng\n\n\ng <- ggplot(scoresFull, aes(x = homeRushYds, y = HFinal)) +\n  geom_point()\n\ng\n\ng <- ggplot(scoresFull, aes(x = homeRushYds, y = HFinal)) +\n  geom_point() +\n  geom_smooth() +\n  geom_smooth(method = lm, col = \"Red\") \n\npaste(\"Hi\", \"What\", \"Is\", \"Going\", \"On\", \"?\", sep = \" \")\npaste(\"Hi\", \"What\", \"Is\", \"Going\", \"On\", \"?\", sep = \".\")\n\ng <- ggplot(scoresFull, aes(x = homeRushYds,y = HFinal)) +\n  geom_point() +\n  geom_smooth() +\n  geom_smooth(method = lm, col = \"Red\") + \n  geom_text(x = 315, y = 10, size = 5, label = paste0(\"Correlation = \", round(correlation, 2)))\n\ng\n\n\n\ng <- ggplot(scoresFull, aes(x = homeRushYds, y = HFinal)) +\n  geom_point()+\n  facet_grid(roof ~ surface)\n\ng\n\ng <- ggplot(scoresFull, aes(x = homeRushYds,y = HFinal)) +\n  geom_point(aes(col = homeSpread), alpha = 0.3, size = 0.5) +  \n  facet_grid(roof ~ surface)\n\ng\n\npairs(select(scoresFull, Hturnovers, homeRushYds,\n             homePassYds, HFinal), cex = 0.3)\n\n\nCorrelation <- cor(select(scoresFull, Hturnovers, homeRushYds,\n                          homePassYds, HFinal), method = \"spearman\")\n\nrequire(corrplot)\ncorrplot(Correlation, type = \"upper\",\n         title = \"Figure 2: Correlation matrix of variables.\",\n         tl.pos = \"lt\")\ncorrplot(Correlation, type = \"lower\", method = \"number\",\n         add = TRUE, diag = FALSE, tl.pos = \"n\")\n\n\ng <- ggplot(scoresFull, aes(x = surface, y = homePassYds)) +\n  geom_boxplot(fill = \"grey\")\ng\n\n\ng <- ggplot(scoresFull, aes(x = surface, y = homePassYds)) +\n  geom_boxplot(fill = \"grey\") +\n  geom_jitter(aes(col = roof), alpha = 0.3, size = 0.3) +\n  stat_summary(fun.y = mean, geom = \"line\", \n               lwd = 1.5, aes(group = roof, col = roof))\ng\n\ng <- ggplot(scoresFull, aes(x = surface, y = homePassYds))+\n  geom_violin(fill = \"blue\") + geom_boxplot(fill=\"grey\", alpha = 0.3)\ng\n\noneDate<-paste(scoresFull$date[1], scoresFull$season[1], sep = \"-\")\noneDate\n\nlibrary(lubridate)\nas.Date(oneDate, \"%d-%b-%Y\")\n\nas.Date(oneDate, \"%d-%b-%Y\") + 1\n\nscoresFull$date <- paste(scoresFull$date, scoresFull$season, sep = \"-\") %>% \n  as.Date(\"%d-%b-%Y\")\n\n\nsubScores <- scoresFull %>% \n  filter(homeTeam %in% c(\"Pittsburgh Steelers\", \"Cleveland Browns\",\n                         \"Baltimore Ravens\", \"Cincinnati Bengals\")) %>% \n  group_by(season, homeTeam) %>%\n  summarise(homeAvgYds = mean(homePassYds + homeRushYds))\n\nsubScores\n\ng <- ggplot(subScores, aes(x = season, y = homeAvgYds, color = homeTeam)) +\n  geom_line(lwd = 2)\ng\n\ninstall.packages(\"plot3Drgl\")\nlibrary(plot3Drgl)\n\nscatter3D(x = scoresFull$homeRushYds, y = scoresFull$awayRushYds,\n          z = scoresFull$HFinal)\n\nplotrgl()\n\nvoting <- read.csv(\"https://raw.githubusercontent.com/jbpost2/DataScienceR/master/datasets/counties.csv\", header = TRUE)\nvoting\n\n\nvotePlot <- ggplot(voting, aes(x = college, y = income))\nvotePlot + \n  geom_point()+\n  geom_text(x = 40, y = 15000, label = round(cor(voting$college, voting$income), 2))\n\nvotePlot\n\nlm(income ~ college, data = voting)\n\n\nfit <- lm(income ~ college, data = voting)\nattributes(fit)\n\nanova(fit)\nsummary(fit)\nplot(fit)\n\npredict(fit, newdata = data.frame(college = c(40, 10)))\n\npredict(fit, newdata = data.frame(college = c(40, 10)), se.fit = TRUE)\n\npredict(fit, newdata = data.frame(college = c(40, 10)),\n        se.fit = TRUE, interval = \"confidence\")\n\npredict(fit, newdata = data.frame(college = c(40, 10)),\n        se.fit = TRUE, interval = \"prediction\")\n\n\n\nvotePlot +\n  geom_point(aes(col = region)) +\n  geom_smooth(method = \"lm\", aes(col = region))\n\n\nfits <- voting %>% group_by(region) %>% \n  do(model = lm(income ~ college, data = .))\nnames(fits)\n\n\n\n\n\n\n\n\n\n\n\n\n\nfit2<-lm(income ~ college + Perot, data = voting)\nanova(fit2)\nsummary(fit2)\ncoef(fit2)\nfit2$rank\nplot(fit2)\n\npredict(fit2, newdata = data.frame(college = 40, Perot = 20))\n\n",
    "created" : 1502153808052.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2128357558",
    "id" : "487C27A0",
    "lastKnownWriteTime" : 1502222668,
    "last_content_update" : 1502222668764,
    "path" : "~/DevWork/RApps/example_r_app/test.r",
    "project_path" : "test.r",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}